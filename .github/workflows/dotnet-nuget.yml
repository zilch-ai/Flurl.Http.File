# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish NuGet Package (.NET)

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    # Prepare: Enlist + Restore + Build + Test
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release -p:Deterministic=true -p:ContinuousIntegrationBuild=true --no-restore
    - name: Test
      run: dotnet test -c Release -v normal --no-build

    # Publish NuGet package: Pack + Push
    - name: Pack Nuget package
      run: dotnet pack -c Release --no-build -o ./artifacts -p:PackageVersion=${GITHUB_REF#refs/tags/v} 
    - name: Push Nuget package
      run: dotnet nuget push ./artifacts/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate

    # Publish Playground CLI: Publish + Zip + Release
    - name: Publish Playground binaries
      run: dotnet publish -c Release -o ./publish/Playground
    - name: Zip Playground archive
      run: |
        mkdir -p ./artifacts
        zip -j ./artifacts/Playground.zip ./publish/Playground/*
    - name: Create GithubRelease
      id: create_release
      run: |
        release_response=$(curl -s -X POST https://api.github.com/repos/${{ github.repository }}/releases \
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -d '{
          "tag_name": "v1.0.0",
          "name": "Release v1.0.0",
          "body": "Release notes",
          "draft": false,
          "prerelease": false
        }')
        echo "::set-output name=upload_url::$(echo $release_response | jq -r .upload_url | sed 's/{?name,label}//')"
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./artifacts/Playground.zip
        asset_name: Playground.zip
        asset_content_type: application/zip
